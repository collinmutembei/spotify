version: '3.9'
volumes:
  postgres: {}
  redis: {}
services:
  postgres:
    restart: always
    build: external/postgres
    command: postgres -c 'max_connections=200'
    ports:
    - 5432:5432
    volumes:
    - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: minos
      POSTGRES_PASSWORD: min0s
  apigateway:
    restart: always
    build: external/apigateway
    ports:
    - 5566:5566
    depends_on:
    - discovery
    environment:
      PYTHONPATH: /api_gateway
      DISCOVERY_SERVICE_HOST: discovery
      API_GATEWAY_DISCOVERY_HOST: discovery
  discovery:
    restart: always
    build: external/discovery
    ports:
    - '5567'
    depends_on:
    - redis
    environment:
      DISCOVERY_SERVICE_DB_HOST: redis
  redis:
    image: docker.io/bitnami/redis:6.2
    user: root
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: 'yes'
      REDIS_DISABLE_COMMANDS: FLUSHDB,FLUSHALL
    volumes:
    - redis:/bitnami/redis/data
  microservice-people:
    restart: always
    build:
      context: microservices/people
      target: production
    environment: &id001
      MINOS_INTERFACES_BROKER_COMMON_HOST: kafka
      MINOS_DATABASES_DEFAULT_HOST: postgres
      MINOS_DATABASES_QUERY_HOST: postgres
      MINOS_SNAPSHOT_HOST: postgres
      MINOS_DISCOVERY_HOST: discovery
    depends_on: &id002
    - postgres
    - kafka
    - discovery
  microservice-music:
    restart: always
    build:
      context: microservices/music
      target: production
    environment: *id001
    depends_on: *id002
  microservice-stream:
    restart: always
    build:
      context: microservices/stream
      target: production
    environment: *id001
    depends_on: *id002
  microservice-account:
    restart: always
    build:
      context: microservices/account
      target: production
    environment: *id001
    depends_on: *id002
x-microservice-environment: *id001
x-microservice-depends-on: *id002
